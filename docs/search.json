[
  {
    "objectID": "ST558 HW5 Quarto Doc.html",
    "href": "ST558 HW5 Quarto Doc.html",
    "title": "ST558 HW5 Quarto Doc",
    "section": "",
    "text": "#ST558 HW4: Liam Flaherty"
  },
  {
    "objectID": "ST558 HW5 Quarto Doc.html#task-1-conceptual-questions",
    "href": "ST558 HW5 Quarto Doc.html#task-1-conceptual-questions",
    "title": "ST558 HW5 Quarto Doc",
    "section": "Task 1: Conceptual Questions",
    "text": "Task 1: Conceptual Questions\n\nTask 1, Question 1\n\nWhat is the purpose of using cross-validation when fitting a random forest model?\n\n\nIn general, using cross-validation allows us to prevent overfitting when we don’t have sufficient data to split into training and test data.\n\n\n\nTask 1, Question 2\n\nDescribe the bagged tree algorithm.\n\n\nThe bagged tree algorithm essentially samples with replacement from itself, then builds trees on each sample subset.\n\n\n\nTask 1, Question 3\n\nWhat is meant by a general linear model?\n\n\nA general linear model is one that has a continuous response variable and (potentially) continuous and categorical predictors. This stands in contrast to generalized linear models, which allow for responses that are non-normal.\n\n\n\nTask 1, Question 4\n\nWhen fitting a multiple linear regression model, what does adding an interaction term do? That is, what does it allow the model to differently as compared to when it is not included in the model?\n\n\nThe interaction term in the model is used when the two variables have different effects when considered together. For example, may asprin has an effect on heart rate, and alchohol has an effect on heart rate, but the precence of both alchohol and asprin generate different effects.\n\n\n\nTask 1, Question 5\n\nWhy do we split our data into a training and test set?\n\n\nWe split the data into training and tests sets to evaluate our models and prevent overfitting. Whenever we add terms, our correlation can only improve. But more complicated models may suffer from overfitting. When comparing models, we generally select the model which does “best” (by way of a measurment such as MSE) on the test data."
  },
  {
    "objectID": "ST558 HW5 Quarto Doc.html#task-2-fitting-models",
    "href": "ST558 HW5 Quarto Doc.html#task-2-fitting-models",
    "title": "ST558 HW5 Quarto Doc",
    "section": "Task 2: Fitting Models",
    "text": "Task 2: Fitting Models\nWe are given some data on heart disease from https://www4.stat.ncsu.edu/~online/datasets/heart.csv. We first download the data locally, then store it as an R object as usual.\n\nlibrary(tidyverse)\n\nWarning: package 'lubridate' was built under R version 4.4.1\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nheart=read_csv(\"heart.csv\")\n\nRows: 918 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): Sex, ChestPainType, RestingECG, ExerciseAngina, ST_Slope\ndbl (7): Age, RestingBP, Cholesterol, FastingBS, MaxHR, Oldpeak, HeartDisease\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nheart                             #get a glimpse of the data#\n\n# A tibble: 918 × 12\n     Age Sex   ChestPainType RestingBP Cholesterol FastingBS RestingECG MaxHR\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;             &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;\n 1    40 M     ATA                 140         289         0 Normal       172\n 2    49 F     NAP                 160         180         0 Normal       156\n 3    37 M     ATA                 130         283         0 ST            98\n 4    48 F     ASY                 138         214         0 Normal       108\n 5    54 M     NAP                 150         195         0 Normal       122\n 6    39 M     NAP                 120         339         0 Normal       170\n 7    45 F     ATA                 130         237         0 Normal       170\n 8    54 M     ATA                 110         208         0 Normal       142\n 9    37 M     ASY                 140         207         0 Normal       130\n10    48 F     ATA                 120         284         0 Normal       120\n# ℹ 908 more rows\n# ℹ 4 more variables: ExerciseAngina &lt;chr&gt;, Oldpeak &lt;dbl&gt;, ST_Slope &lt;chr&gt;,\n#   HeartDisease &lt;dbl&gt;\n\nstr(as.data.frame(heart))         #normal summaries#\n\n'data.frame':   918 obs. of  12 variables:\n $ Age           : num  40 49 37 48 54 39 45 54 37 48 ...\n $ Sex           : chr  \"M\" \"F\" \"M\" \"F\" ...\n $ ChestPainType : chr  \"ATA\" \"NAP\" \"ATA\" \"ASY\" ...\n $ RestingBP     : num  140 160 130 138 150 120 130 110 140 120 ...\n $ Cholesterol   : num  289 180 283 214 195 339 237 208 207 284 ...\n $ FastingBS     : num  0 0 0 0 0 0 0 0 0 0 ...\n $ RestingECG    : chr  \"Normal\" \"Normal\" \"ST\" \"Normal\" ...\n $ MaxHR         : num  172 156 98 108 122 170 170 142 130 120 ...\n $ ExerciseAngina: chr  \"N\" \"N\" \"N\" \"Y\" ...\n $ Oldpeak       : num  0 1 0 1.5 0 0 0 0 1.5 0 ...\n $ ST_Slope      : chr  \"Up\" \"Flat\" \"Up\" \"Flat\" ...\n $ HeartDisease  : num  0 1 0 1 0 0 0 0 1 0 ...\n\nsummary(heart)                    #normal summaries#\n\n      Age            Sex            ChestPainType        RestingBP    \n Min.   :28.00   Length:918         Length:918         Min.   :  0.0  \n 1st Qu.:47.00   Class :character   Class :character   1st Qu.:120.0  \n Median :54.00   Mode  :character   Mode  :character   Median :130.0  \n Mean   :53.51                                         Mean   :132.4  \n 3rd Qu.:60.00                                         3rd Qu.:140.0  \n Max.   :77.00                                         Max.   :200.0  \n  Cholesterol      FastingBS       RestingECG            MaxHR      \n Min.   :  0.0   Min.   :0.0000   Length:918         Min.   : 60.0  \n 1st Qu.:173.2   1st Qu.:0.0000   Class :character   1st Qu.:120.0  \n Median :223.0   Median :0.0000   Mode  :character   Median :138.0  \n Mean   :198.8   Mean   :0.2331                      Mean   :136.8  \n 3rd Qu.:267.0   3rd Qu.:0.0000                      3rd Qu.:156.0  \n Max.   :603.0   Max.   :1.0000                      Max.   :202.0  \n ExerciseAngina        Oldpeak          ST_Slope          HeartDisease   \n Length:918         Min.   :-2.6000   Length:918         Min.   :0.0000  \n Class :character   1st Qu.: 0.0000   Class :character   1st Qu.:0.0000  \n Mode  :character   Median : 0.6000   Mode  :character   Median :1.0000  \n                    Mean   : 0.8874                      Mean   :0.5534  \n                    3rd Qu.: 1.5000                      3rd Qu.:1.0000  \n                    Max.   : 6.2000                      Max.   :1.0000  \n\n\n\nTask 2, EDA Part 1\n\n\nTask 2, EDA Part 2\nWe would like to make some minor alterations to our dataset. First, we transform the binary response (the presence of heart disease) from numeric to factor using tivdyverse’s mutate(). Next, we remove the ST_Slope and old numeric heart disease variables from our tibble.\n\nheart=heart|&gt;\n  mutate(HeartDisease=as.factor(HeartDisease)) |&gt;\n  select(-ST_Slope)\n\n\n\nTask 2, EDA Part 3\n\n\nTask 2, Split Data\n\n\nTask 2, kNN\n\n\nTask 2, Logistic Regression\n\n\nTask 2, Tree Models"
  }
]